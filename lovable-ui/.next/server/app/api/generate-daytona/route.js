"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-daytona/route";
exports.ids = ["app/api/generate-daytona/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-daytona%2Froute&page=%2Fapi%2Fgenerate-daytona%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-daytona%2Froute.ts&appDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-daytona%2Froute&page=%2Fapi%2Fgenerate-daytona%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-daytona%2Froute.ts&appDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_cloudaistudio_Documents_EVERJUST_PROJECTS_PROJECT_JUST_BUILD_justbuild_lovable_ui_app_api_generate_daytona_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/generate-daytona/route.ts */ \"(rsc)/./app/api/generate-daytona/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-daytona/route\",\n        pathname: \"/api/generate-daytona\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-daytona/route\"\n    },\n    resolvedPagePath: \"/Users/cloudaistudio/Documents/EVERJUST PROJECTS/PROJECT JUST BUILD/justbuild/lovable-ui/app/api/generate-daytona/route.ts\",\n    nextConfigOutput,\n    userland: _Users_cloudaistudio_Documents_EVERJUST_PROJECTS_PROJECT_JUST_BUILD_justbuild_lovable_ui_app_api_generate_daytona_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/generate-daytona/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS1kYXl0b25hJTJGcm91dGUmcGFnZT0lMkZhcGklMkZnZW5lcmF0ZS1kYXl0b25hJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZ2VuZXJhdGUtZGF5dG9uYSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmNsb3VkYWlzdHVkaW8lMkZEb2N1bWVudHMlMkZFVkVSSlVTVCUyMFBST0pFQ1RTJTJGUFJPSkVDVCUyMEpVU1QlMjBCVUlMRCUyRmp1c3RidWlsZCUyRmxvdmFibGUtdWklMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGY2xvdWRhaXN0dWRpbyUyRkRvY3VtZW50cyUyRkVWRVJKVVNUJTIwUFJPSkVDVFMlMkZQUk9KRUNUJTIwSlVTVCUyMEJVSUxEJTJGanVzdGJ1aWxkJTJGbG92YWJsZS11aSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDMEU7QUFDdko7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sb3ZhYmxlLXVpLz9lNzgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9jbG91ZGFpc3R1ZGlvL0RvY3VtZW50cy9FVkVSSlVTVCBQUk9KRUNUUy9QUk9KRUNUIEpVU1QgQlVJTEQvanVzdGJ1aWxkL2xvdmFibGUtdWkvYXBwL2FwaS9nZW5lcmF0ZS1kYXl0b25hL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nZW5lcmF0ZS1kYXl0b25hL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2VuZXJhdGUtZGF5dG9uYVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2VuZXJhdGUtZGF5dG9uYS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9jbG91ZGFpc3R1ZGlvL0RvY3VtZW50cy9FVkVSSlVTVCBQUk9KRUNUUy9QUk9KRUNUIEpVU1QgQlVJTEQvanVzdGJ1aWxkL2xvdmFibGUtdWkvYXBwL2FwaS9nZW5lcmF0ZS1kYXl0b25hL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9nZW5lcmF0ZS1kYXl0b25hL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-daytona%2Froute&page=%2Fapi%2Fgenerate-daytona%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-daytona%2Froute.ts&appDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/generate-daytona/route.ts":
/*!*******************************************!*\
  !*** ./app/api/generate-daytona/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function OPTIONS(req) {\n    return new Response(null, {\n        status: 200,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Content-Type\"\n        }\n    });\n}\nasync function POST(req) {\n    try {\n        const { prompt } = await req.json();\n        if (!prompt) {\n            return new Response(JSON.stringify({\n                error: \"Prompt is required\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        if (!process.env.DAYTONA_API_KEY || !process.env.ANTHROPIC_API_KEY) {\n            return new Response(JSON.stringify({\n                error: \"Missing API keys\"\n            }), {\n                status: 500,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        console.log(\"[API] Starting Daytona generation for prompt:\", prompt);\n        // Create a streaming response\n        const encoder = new TextEncoder();\n        const stream = new TransformStream();\n        const writer = stream.writable.getWriter();\n        // Start the async generation\n        (async ()=>{\n            let heartbeatInterval;\n            try {\n                // Use the generate-in-daytona.ts script\n                const scriptPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"scripts\", \"generate-in-daytona.ts\");\n                const child = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.spawn)(\"npx\", [\n                    \"tsx\",\n                    scriptPath,\n                    prompt\n                ], {\n                    env: {\n                        ...process.env,\n                        DAYTONA_API_KEY: process.env.DAYTONA_API_KEY,\n                        ANTHROPIC_API_KEY: process.env.ANTHROPIC_API_KEY\n                    }\n                });\n                let sandboxId = \"\";\n                let previewUrl = \"\";\n                let buffer = \"\";\n                // Send heartbeat every 15 seconds to prevent proxy timeouts  \n                heartbeatInterval = setInterval(async ()=>{\n                    try {\n                        // Use SSE comment format to keep connection alive without triggering client events\n                        await writer.write(encoder.encode(\": keepalive\\n\\n\"));\n                    } catch (e) {\n                        if (heartbeatInterval) clearInterval(heartbeatInterval);\n                    }\n                }, 15000);\n                // Capture stderr\n                child.stderr.on(\"data\", async (data)=>{\n                    const error = data.toString();\n                    console.error(\"[Daytona Error]:\", error);\n                    // Enhanced error categorization and messaging\n                    if (error.includes(\"TIMEOUT\") || error.includes(\"timed out\")) {\n                        await writer.write(encoder.encode(`data: ${JSON.stringify({\n                            type: \"timeout_warning\",\n                            message: \"⏱️ Generation is taking longer than expected. This may indicate a complex prompt.\"\n                        })}\\n\\n`));\n                    } else if (error.includes(\"Error\") || error.includes(\"Failed\")) {\n                        await writer.write(encoder.encode(`data: ${JSON.stringify({\n                            type: \"error\",\n                            message: error.trim()\n                        })}\\n\\n`));\n                    }\n                });\n                // Capture stdout for timeout warnings and progress\n                child.stdout.on(\"data\", async (data)=>{\n                    buffer += data.toString();\n                    const lines = buffer.split(\"\\n\");\n                    buffer = lines.pop() || \"\"; // Keep incomplete line in buffer\n                    for (const line of lines){\n                        if (!line.trim()) continue;\n                        // Check for timeout warnings and retry messages\n                        if (line.includes(\"⚠️\") || line.includes(\"\\uD83D\\uDD04\") || line.includes(\"⏱️\")) {\n                            await writer.write(encoder.encode(`data: ${JSON.stringify({\n                                type: \"timeout_info\",\n                                message: line.trim()\n                            })}\\n\\n`));\n                            continue;\n                        }\n                        // Parse Claude messages\n                        if (line.includes(\"__CLAUDE_MESSAGE__\")) {\n                            const jsonStart = line.indexOf(\"__CLAUDE_MESSAGE__\") + \"__CLAUDE_MESSAGE__\".length;\n                            try {\n                                const message = JSON.parse(line.substring(jsonStart).trim());\n                                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                                    type: \"claude_message\",\n                                    content: message.content\n                                })}\\n\\n`));\n                            } catch (e) {\n                            // Ignore parse errors\n                            }\n                        } else if (line.includes(\"__TOOL_USE__\")) {\n                            const jsonStart = line.indexOf(\"__TOOL_USE__\") + \"__TOOL_USE__\".length;\n                            try {\n                                const toolUse = JSON.parse(line.substring(jsonStart).trim());\n                                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                                    type: \"tool_use\",\n                                    name: toolUse.name,\n                                    input: toolUse.input\n                                })}\\n\\n`));\n                            } catch (e) {\n                            // Ignore parse errors\n                            }\n                        } else if (line.includes(\"__TOOL_RESULT__\")) {\n                            continue;\n                        } else {\n                            const output = line.trim();\n                            // Filter out internal logs\n                            if (output && !output.includes(\"[Claude]:\") && !output.includes(\"[Tool]:\") && !output.includes(\"__\")) {\n                                // Send as progress\n                                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                                    type: \"progress\",\n                                    message: output\n                                })}\\n\\n`));\n                                // Extract sandbox ID\n                                const sandboxMatch = output.match(/Sandbox created: ([a-f0-9-]+)/);\n                                if (sandboxMatch) {\n                                    sandboxId = sandboxMatch[1];\n                                }\n                                // Extract preview URL\n                                const previewMatch = output.match(/Preview URL: (https:\\/\\/[^\\s]+)/);\n                                if (previewMatch) {\n                                    previewUrl = previewMatch[1];\n                                }\n                            }\n                        }\n                    }\n                });\n                // Wait for process to complete\n                await new Promise((resolve, reject)=>{\n                    child.on(\"exit\", (code)=>{\n                        if (code === 0) {\n                            resolve(code);\n                        } else {\n                            reject(new Error(`Process exited with code ${code}`));\n                        }\n                    });\n                    child.on(\"error\", reject);\n                });\n                // Send completion with preview URL\n                if (previewUrl) {\n                    await writer.write(encoder.encode(`data: ${JSON.stringify({\n                        type: \"complete\",\n                        sandboxId,\n                        previewUrl\n                    })}\\n\\n`));\n                    console.log(`[API] Generation complete. Preview URL: ${previewUrl}`);\n                } else {\n                    throw new Error(\"Failed to get preview URL\");\n                }\n                // Send done signal\n                await writer.write(encoder.encode(\"data: [DONE]\\n\\n\"));\n                if (heartbeatInterval) clearInterval(heartbeatInterval);\n            } catch (error) {\n                console.error(\"[API] Error during generation:\", error);\n                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                    type: \"error\",\n                    message: error.message\n                })}\\n\\n`));\n                await writer.write(encoder.encode(\"data: [DONE]\\n\\n\"));\n                if (heartbeatInterval) clearInterval(heartbeatInterval);\n            } finally{\n                await writer.close();\n            }\n        })();\n        return new Response(stream.readable, {\n            headers: {\n                \"Content-Type\": \"text/event-stream\",\n                \"Cache-Control\": \"no-cache\",\n                \"Connection\": \"keep-alive\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n                \"Access-Control-Allow-Headers\": \"Content-Type\"\n            }\n        });\n    } catch (error) {\n        console.error(\"[API] Error:\", error);\n        return new Response(JSON.stringify({\n            error: error.message || \"Internal server error\"\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/generate-daytona/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-daytona%2Froute&page=%2Fapi%2Fgenerate-daytona%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-daytona%2Froute.ts&appDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcloudaistudio%2FDocuments%2FEVERJUST%20PROJECTS%2FPROJECT%20JUST%20BUILD%2Fjustbuild%2Flovable-ui&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();